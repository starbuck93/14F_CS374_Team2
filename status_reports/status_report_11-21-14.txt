Status Report: November 21st, 2014 - Team 2 CS 374 14F

Weekend: Group 2 signed up for and attended Hackathon.  Our featured app for Hackathon was this project.  Small additions were made over the weekend.
Monday: Test website, with ability to retrieve course information, was demonstrated in class.  This is distinct from the first test website (the "about us" link that serves as a placeholder.
Wednesday:  
Friday: 

Labor:
--------------------
Adam: PHP components added
Ethan: Minor edits and typo fixes in the PHP code added.  Queries for Thursday should now output the value of R, the variable for Thursday, not T, the variable for Tuesday.
Jonathan: PHP components added
Rodger: Ruby components added.  

Wrote a php script to extract the information from the CSV file and create a 32,000-line series of SQL tables from that CSV file.  This means we can now work with the data given by the instructor, not just the test data and SQL tables we created to match our schema.

This php script was demonstrated after class on November 19.

Edits were made to this SQL version of the original data, including the addition of queries and changes in table names.  Additional SQL code was added to limit the (very large) output during testing.

--------------------------------------------------------
Meetings:
November 19: held improptu half-hour meeting after class at 2:50.  

Outcome: 

Thanks to Jonathan and Adam, we resolved several merge issues with our master directory.  All local directories are now up to date, including the status report folder.

The 
--------------------------------------------------------
TODO list:
    - implement query functionality for project
    - implement simple data handler
        - think about complex data handler implementation
    - create a test-banner database for Cucumbering
        - create tables that match the schema in project design
        - make up enough data to chop up in a nice Cucumber salad
    - write drivers/features to test querying functionality
        - write some drivers that require db connection
        - write other drivers that do NOT require db connection (so that testing
can be done on local machines that cannot establish db connection)
    - write drivers/features for simple data handler functionality
        - write some drivers with db connection and others without
    - create an 'out' subdirectory in the repo root; send current
cucumber output to text files in this subdirectory (this is important
since we will only be able to run some features from the prod/testing server)
--------------------------------------------------------



